name: Setup Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: envoy-ai-gateway-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-platform:
    runs-on: ubuntu-latest
    steps:
      
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        df -h

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup prerequisites
      run: |
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        # Install kind
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/
        
        # Install helm
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        
        # Install jq (should already be available)
        sudo apt-get update
        sudo apt-get install -y jq
        
        # Verify installations
        echo "Tool versions:"
        kubectl version --client
        kind version
        helm version
        jq --version
        docker --version
        task --version
      
    - name: Run complete setup (following README)
      run: |
        echo "ðŸš€ Running complete setup as documented in README..."
        task setup-all
      
    - name: Verify installation (following README)
      run: |
        echo "âœ… Running verification as documented in README..."
        task verify-installation
        
    - name: Basic cluster check
      run: |
        echo "=== Basic Cluster Status ==="
        kubectl get nodes --kubeconfig=kubeconfig.yaml
        kubectl get pods --all-namespaces --kubeconfig=kubeconfig.yaml
        
    - name: Show logs on failure
      if: failure()
      run: |
        echo "=== Failure Logs ==="
        kubectl get pods --all-namespaces --kubeconfig=kubeconfig.yaml || true
        kubectl logs -n envoy-gateway-system --tail=50 --kubeconfig=kubeconfig.yaml || true
        
    - name: Cleanup
      if: always()
      run: |
        echo "=== Cleanup ==="
        task cleanup || true
