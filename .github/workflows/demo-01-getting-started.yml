name: Demo 01 - Getting Started

on:
  push:
    branches: [ main ]
    paths:
      - 'demos/01-getting-started/**'
      - '.github/workflows/demo-01-getting-started.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'demos/01-getting-started/**'
      - '.github/workflows/demo-01-getting-started.yml'
  workflow_dispatch:

jobs:
  demo-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup prerequisites
      run: |
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        # Install kind
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.29.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/
        
        # Install helm
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        
        # Install jq (should already be available)
        sudo apt-get update
        sudo apt-get install -y jq
        
        # Verify installations
        echo "Tool versions:"
        kubectl version --client
        kind version
        helm version
        jq --version
        docker --version
        task --version

    - name: Free up disk space
      run: |
        docker system prune -af
        
    - name: Clean up existing Kind resources
      run: |
        echo "🧹 Cleaning up any existing Kind clusters and containers..."
        # Delete any existing kind clusters
        kind delete clusters --all || true

    - name: Deploy demo components
      run: |
        echo "🚀 Deploying demo components..."
        # Export kubeconfig from kind cluster
        cd demos/01-getting-started
        task setup
        
    - name: Wait for demo components to be ready
      run: |
        echo "⏳ Waiting for demo components to be ready..."
        task wait-ready
        
    - name: Verify deployment status
      run: |
        echo "📊 Checking deployment status..."
        kubectl get pods --all-namespaces
        kubectl get gateways --all-namespaces
        kubectl get httproutes --all-namespaces
        task status

    - name: Start port forwarding in background
      run: |
        echo "🔌 Starting port forwarding..."
        task port-forward

    - name: Test chat completions endpoint
      run: |
        echo "🧪 Testing chat completions endpoint..."
        # Wait a bit more to ensure port forwarding is stable
        sleep 5
        task test-chat

    - name: Test models endpoint
      run: |
        echo "🧪 Testing models endpoint..."
        task test-models

    - name: Test streaming endpoint
      run: |
        echo "🧪 Testing streaming endpoint..."
        task test-stream

    - name: Run all tests
      run: |
        echo "🧪 Running all tests..."
        task test

    - name: Show component logs
      if: always()
      run: |
        echo "📋 Showing component logs..."
        task logs || true

    - name: Show failure diagnostics
      if: failure()
      run: |
        echo "🔍 Failure diagnostics..."
        echo "=== Pods Status ==="
        kubectl get pods --all-namespaces || true
        echo "=== Gateway Status ==="
        kubectl get gateways --all-namespaces || true
        echo "=== HTTPRoute Status ==="
        kubectl get httproutes --all-namespaces || true
        echo "=== Events ==="
        kubectl get events --all-namespaces --sort-by='.lastTimestamp' || true
        echo "=== Envoy Gateway Logs ==="
        kubectl logs -n envoy-gateway-system -l control-plane=envoy-gateway --tail=50 || true
        echo "=== Demo Component Logs ==="
        kubectl logs -l app=llm-d-inference-sim --tail=50 || true

    - name: Cleanup
      if: always()
      run: |
        echo "🧹 Cleanup..."
        task cleanup || true
        cd ../../
        task cleanup || true
        # Kill any remaining port forwarding processes
        pkill -f "kubectl port-forward" || true
        # Clean up kind cluster
        kind delete clusters --all || true
